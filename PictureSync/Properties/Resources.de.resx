<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\icon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Program_Main_Exit" xml:space="preserve">
    <value>Verlassen</value>
  </data>
  <data name="Program_Main_Hide" xml:space="preserve">
    <value>Verstecken</value>
  </data>
  <data name="Program_Main_Bot_started_log" xml:space="preserve">
    <value>Bot gestartet</value>
  </data>
  <data name="Program_Main_Show" xml:space="preserve">
    <value>Anzeigen</value>
  </data>
  <data name="Program_Main_Bot_stopped_log" xml:space="preserve">
    <value>Bot gestoppt</value>
  </data>
  <data name="TelegramBot_picture_accepted" xml:space="preserve">
    <value>Bild akzeptiert.</value>
  </data>
  <data name="TelegramBot_picture_accepted_uncompressed" xml:space="preserve">
    <value>Unkomprimiertes Bild akzeptiert von.</value>
  </data>
  <data name="TelegramBot_picture_accepted_log" xml:space="preserve">
    <value>Bild akzeptiert von</value>
  </data>
  <data name="TelegramBot_picture_compression_autoenable_log" xml:space="preserve">
    <value>autoenable compression für</value>
  </data>
  <data name="TelegramBot_picture_compression_autoenable" xml:space="preserve">
    <value>Komprimierung ist wieder aktiv.</value>
  </data>
  <data name="TelegramBot_picture_wrong_filetype" xml:space="preserve">
    <value>Error. Falscher Dateityp.</value>
  </data>
  <data name="TelegramBot_picture_wrong_filetype_log" xml:space="preserve">
    <value>Error. Falscher Dateityp.</value>
  </data>
  <data name="TelegramBot_picture_saved_as_log" xml:space="preserve">
    <value>als</value>
  </data>
  <data name="TelegramBot_Bot_OnMessage_deny_picture" xml:space="preserve">
    <value>Bild nicht akzeptiert. Bitte als Datei senden.</value>
  </data>
  <data name="TelegramBot_Bot_OnMessage_deny_picture_log" xml:space="preserve">
    <value>versuchte ein Bild zu senden, allerdings nicht als Datei</value>
  </data>
  <data name="TelegramBot_Bot_OnMessage_document_incoming_log" xml:space="preserve">
    <value>Dokument wird geladen von</value>
  </data>
  <data name="TelegramBot_Bot_OnMessage_auth_successful_log" xml:space="preserve">
    <value>hat gerade einen neuen Telegram Account authentifiziert</value>
  </data>
  <data name="TelegramBot_Bot_OnMessage_auth_successful" xml:space="preserve">
    <value>Authentifizierung erfolgreich.</value>
  </data>
  <data name="TelegramBot_Bot_OnMessage_auth_not_successful_log" xml:space="preserve">
    <value>versuchte sich zu authentifizieren, gab aber das falsche Passwort ein</value>
  </data>
  <data name="TelegramBot_Bot_OnMessage_auth_not_successful" xml:space="preserve">
    <value>Authentifizierungs Fehler.</value>
  </data>
  <data name="TelegramBot_Bot_OnMessage_auth_no_username" xml:space="preserve">
    <value>Authentifizierungs Fehler. Ist ein Benutzername gesetzt?</value>
  </data>
  <data name="TelegramBot_Date_taken_no_capturetime" xml:space="preserve">
    <value>Foto hat kein Aufnahmedatum (speichere mit Serverzeit) von</value>
  </data>
  <data name="TelegramBot_AdminCommands_activity_accessed" xml:space="preserve">
    <value>sah in die Aktivität ein</value>
  </data>
  <data name="TelegramBot_AdminCommands_party" xml:space="preserve">
    <value>Du hast den Partymodus aktiviert. Gratuliere!</value>
  </data>
  <data name="TelegramBot_CommonCommands_commands" xml:space="preserve">
    <value>Befehle:</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_activity_amount" xml:space="preserve">
    <value>/amountactivity - Zeigt an wieviele Bilder pro Nutzer insgesamt schon gesendet wurden</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_activity_time" xml:space="preserve">
    <value>/timeactivity - Zeigt die letzte Nutzeraktivität an</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_coff" xml:space="preserve">
    <value>/coff - Komprimierung für das nächste Bild deaktivieren</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_con" xml:space="preserve">
    <value>/con - Komprimierung aktivieren</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_admin" xml:space="preserve">
    <value>/admin &lt;pw&gt; - Als admin registrieren</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_auth" xml:space="preserve">
    <value>/auth &lt;pw&gt; - Einen neuen Nutzer authentifizieren</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_help" xml:space="preserve">
    <value>/help - Zeigt diesen Text an</value>
  </data>
  <data name="TelegramBot_CommonCommands_admin_successful_log" xml:space="preserve">
    <value>hat sich als Admin registriert</value>
  </data>
  <data name="TelegramBot_CommonCommands_admin_successful" xml:space="preserve">
    <value>Sie sind jetzt Admin</value>
  </data>
  <data name="TelegramBot_CommonCommands_admin_not_successful_log" xml:space="preserve">
    <value>versuchte sich als admin zu registrieren, gab aber das falsche Passwort ein</value>
  </data>
  <data name="TelegramBot_CommonCommands_admin_not_successful" xml:space="preserve">
    <value>Fehler. Sie haben keine Admin Rechte.</value>
  </data>
  <data name="TelegramBot_CommonCommands_coff_log" xml:space="preserve">
    <value>deaktivierte die Komprimierung</value>
  </data>
  <data name="TelegramBot_CommonCommands_coff" xml:space="preserve">
    <value>Komprimierung ist für das nächste Bild deaktiviert.</value>
  </data>
  <data name="TelegramBot_CommonCommands_con_log" xml:space="preserve">
    <value>aktivierte die Komprimierung</value>
  </data>
  <data name="TelegramBot_CommonCommands_con" xml:space="preserve">
    <value>Komprimierung ist aktiviert.</value>
  </data>
  <data name="TelegramBot_CommonCommands_Note_log" xml:space="preserve">
    <value>Notiz:</value>
  </data>
  <data name="TelegramBot_CommonCommands_nocommand" xml:space="preserve">
    <value>Befehl nicht vorhanden.</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_change_pw" xml:space="preserve">
    <value>/pwedit &lt;alt&gt; &lt;neu&gt; - Ändert das Passwort</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_clear_activity" xml:space="preserve">
    <value>/timeactivity_clear - Setzt Nutzeraktivität zurück</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_clear_amount" xml:space="preserve">
    <value>/amountactivity_clear - Setzt alle Zähler zurück</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_log" xml:space="preserve">
    <value>/log - Zeigt die letzten 100 Zeilen des Logs an</value>
  </data>
  <data name="TelegramBot_CommonCommands_help_add_user" xml:space="preserve">
    <value>/add_user &lt;user&gt; - Fügt einen neuen Nutzer hinzu</value>
  </data>
  <data name="TelegramBot_AdminCommands_add_user_success" xml:space="preserve">
    <value>Erfolgreich hinzugefügt</value>
  </data>
  <data name="TelegramBot_AdminCommands_add_user_success_log" xml:space="preserve">
    <value>hat hinzugefügt:</value>
  </data>
  <data name="TelegramBot_AdminCommands_log_accessed" xml:space="preserve">
    <value>hat sich den Log angesehen</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Erfolgreich</value>
  </data>
  <data name="TelegramBot_AdminCommands_add_user_already_exists" xml:space="preserve">
    <value>Benutzer ist schon vorhanden</value>
  </data>
  <data name="TelegramBot_AdminCommands_add_user_already_exists_log" xml:space="preserve">
    <value>versuchte einen Benutzer hinzuzufügen welcher schon existiert:</value>
  </data>
  <data name="TelegramBot_CommonCommands_start" xml:space="preserve">
    <value>Bot gestartet</value>
  </data>
  <data name="Program_Main_ServiceIsInstalled" xml:space="preserve">
    <value>PictureSyncService ist installiert</value>
  </data>
  <data name="Program_Start_Press_Any_Key" xml:space="preserve">
    <value>Beliebige Taste drücken um zu starten.</value>
  </data>
  <data name="TelegramBot_AdminCommands_amountactivity_cleared_log" xml:space="preserve">
    <value>löschte amountactivity</value>
  </data>
  <data name="TelegramBot_AdminCommands_timeactivity_cleared_log" xml:space="preserve">
    <value>löschte timeactivity</value>
  </data>
  <data name="Error_No_Config" xml:space="preserve">
    <value>Error, keine konfiguration gefunden</value>
  </data>
</root>